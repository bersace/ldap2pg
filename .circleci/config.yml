version: 2.1

workflows:
  version: 2
  default:
    jobs:
    - build:
        name: "stage0-build"
        filters: &enable-for-tags
          tags:
            only: '/v.+/'
    - lint:
        name: "stage0-lint"
    - func:
        name: "stage1-func-rockylinux8-pg15"
        dist: rockylinux8
        requires: [stage0-build]
        pgversion: "14"
    - func:
        name: "stage1-func-centos7-pg12"
        dist: centos7
        requires: [stage0-build]
        pgversion: "12"
    - func:
        name: "stage1-func-centos6-pg9.3"
        dist: centos6
        requires: [stage0-build]
        pgversion: "9.3"
    - pkg:
        name: "stage1-pkg-<< matrix.format >>"
        requires: [stage0-build]
        matrix:
          parameters:
            format: [deb, rpm]
    - release:
        name: stage2-release
        # Send secrets to this jobs from temboard CircleCI context.
        context: ldap2pg
        requires:
        - stage0-build
        filters:
          <<: *enable-for-tags
          # Skip on branches!
          branches:
            ignore: '/.*/'


jobs:
  build:
    working_directory: &workspace /workspace
    docker:
    - image: golang:1.20-bullseye
    steps:
    - checkout
    - restore_cache:
        keys: [go-build]
    - run:
        name: Build Go Files
        command: |
          mkdir -p build
          go build -o build/go-ldap2pg.amd64 -trimpath -buildvcs -ldflags -s ./cmd/go-ldap2pg
    - run:
        name: Smoke test
        command: build/go-ldap2pg.amd64 --version
    - run:
        name: Unit Test
        command: |
          go test -v ./...
    - save_cache:
        key: go-build-{{ epoch }}
        paths:
        - /go/pkg/mod
        - /root/.cache/go-build
    - store_artifacts:
        path: /workspace/build/
    - persist_to_workspace:
        root: .
        paths: [build/]

  lint:
    working_directory: *workspace
    docker:
    - image: golangci/golangci-lint:v1.52.2
    steps:
    - checkout
    - restore_cache:
        keys: [ldap2pg-go-lint]
    - run:
        name: Lint
        command: |
          golangci-lint run
    - save_cache:
        key: go-lint-{{ epoch }}
        paths:
        - /root/.cache/golangci-lint
        - /root/.cache/go-build
        - /go/pkg/mod

  func:
    parameters:
      dist:
        description: "Distribution."
        type: string
      pgversion:
        description: "Major dotted version of PostgreSQL."
        type: string
    docker:
      - image: dalibo/buildpack-python:<< parameters.dist >>
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: communication
          LDAPURI: ldap://ldap.ldap2pg.docker
          LDAPBINDDN: cn=admin,dc=ldap,dc=ldap2pg,dc=docker
          LDAPPASSWORD: communication
      - image: bersace/openldap@sha256:b03ac7f2d85831b93af53c1ac963c17170a4216a4307cf8865142fb6495aee21
        environment:
          LDAP_DOMAIN: ldap.ldap2pg.docker
          LDAP_ADMIN_PASSWORD: communication
          LDAP_ORGANISATION: ldap
      - image: postgres:<< parameters.pgversion >>-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: communication
    working_directory: *workspace
    steps:
    - checkout
    - attach_workspace:
        at: *workspace
    - restore_cache:
        keys: [ldap2pg-go-func]
    - run:
        name: Smoke test
        command: build/go-ldap2pg.amd64 --version
    - run:
        name: ExÃ©cuting Functionnal Tests
        command: |
          echo 127.0.1.1 ldap.ldap2pg.docker >> /etc/hosts
          tests/func/entrypoint.sh
    - save_cache:
        key: ldap2pg-go-func-{{ epoch }}
        paths:
        - /root/.cache/pip

  pkg:
    parameters:
      format:
        description: "nFPM packager"
        type: string
    docker: [{image: "dalibo/buildpack-pkg@sha256:5619b00328c5bd193412014b77295776f831cfa40f9feb37accc8f79b59b6de4"}]  # bullseye
    working_directory: *workspace
    steps:
    - checkout
    - attach_workspace:
        at: *workspace
    - run:
        name: nFPM
        command: |
          nfpm --version
          nfpm package --packager << parameters.format >> --target build/
    - persist_to_workspace:
        root: *workspace
        paths: ["build/*.deb", "build/*.rpm"]

  release:
    # Configure secrets of this job in ldap2pg CircleCI context.
    docker: [{image: dalibo/buildpack:bullseye}]
    working_directory: *workspace
    steps:
    - checkout
    - attach_workspace:
        at: *workspace
    - run:
        name: Create GitHub release
        command: |
          if [[ "${CIRCLE_TAG#v}" =~ [a-z] ]] ; then
            args=(--prerelease)
          else
            args=()
          fi

          rm -f dist/*last*

          gh release create \
            $CIRCLE_TAG \
            build/go-ldap2pg* \
            build/ldap2pg*.deb \
            build/ldap2pg*.rpm \
            --title "${CIRCLE_TAG#v}" \
            -F <(make -s release-notes VERSION=${CIRCLE_TAG#v}) \
            "${args[@]}"
